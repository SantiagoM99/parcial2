{
	"info": {
		"_postman_id": "d54165a4-f402-4f3e-b8a1-837d00912079",
		"name": "Album-Performer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23560565"
	},
	"item": [
		{
			"name": "Create an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"album_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Back in Black\",\n    \"caratula\": \"Caratula Back in Black\",\n    \"fechaLanzamiento\": \"2023-12-11T00:00:00.000Z\",\n    \"descripcion\": \"Es un disco bien agustin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/albums",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums"
					]
				}
			},
			"response": [
				{
					"name": "Create an Album",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Back in Black\",\n    \"caratula\": \"Caratula Back in Black\",\n    \"fechaLanzamiento\": \"2023-12-11T00:00:00.000Z\",\n    \"descripcion\": \"Es un disco bien agustin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/albums",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Create a Performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"performer_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Shakira\",\n    \"descripcion\": \"Buena cantante\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/performers",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"performers"
					]
				}
			},
			"response": [
				{
					"name": "Create a Performer",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Shakira\",\n    \"descripcion\": \"Buena cantante\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/performers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"performers"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Create a Second Performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"performer_id_2\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Shakira\",\n    \"descripcion\": \"Buena cantante\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/performers",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"performers"
					]
				}
			},
			"response": [
				{
					"name": "Create a Second Performer",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Shakira\",\n    \"descripcion\": \"Buena cantante\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/performers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"performers"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Add a Performer to an Album",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"{{performer_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a Performer to an Album",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"{{performer_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Add an invalid Performer to an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The performer with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid Performer to an Album",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Add a Performer to an invalid Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The album with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/00000000-0000-0000-0000-000000000000/performers/{{performer_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"00000000-0000-0000-0000-000000000000",
						"performers",
						"{{performer_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a Performer to an invalid Album",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/00000000-0000-0000-0000-000000000000/performers/{{performer_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"00000000-0000-0000-0000-000000000000",
								"performers",
								"{{performer_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get a Performer of an Album",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"{{performer_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a Performer of an Album",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"{{performer_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get an invalid Performer of an Album",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid Performer of an Album",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get a Performer of an invalid Album",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/00000000-0000-0000-0000-000000000000/performers/{{performer_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"00000000-0000-0000-0000-000000000000",
						"performers",
						"{{performer_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a Performer of an invalid Album",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/00000000-0000-0000-0000-000000000000/performers/{{performer_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"00000000-0000-0000-0000-000000000000",
								"performers",
								"{{performer_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get a non-associated Performer of an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The performer with the given id is not associated to the album\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id_2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"{{performer_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a non-associated Performer of an Album",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"{{performer_id_2}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get Performers of an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers"
					]
				}
			},
			"response": [
				{
					"name": "Get Performers of an Album",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get Performers of an invalid Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The album with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/00000000-0000-0000-0000-000000000000/performers",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"00000000-0000-0000-0000-000000000000",
						"performers"
					]
				}
			},
			"response": [
				{
					"name": "Get Performers of an invalid Album",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/00000000-0000-0000-0000-000000000000/performers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"00000000-0000-0000-0000-000000000000",
								"performers"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Update Performers of an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n    \"nombre\": \"Shakira Isabel\",\n    \"descripcion\": \"Buena cantantin\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n    },\n    {\n    \"nombre\": \"Carlos Vives\",\n    \"descripcion\": \"Buen cantante\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers"
					]
				}
			},
			"response": [
				{
					"name": "Update Performers of an Album",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \"nombre\": \"Shakira Isabel\",\n    \"descripcion\": \"Buena cantantin\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n    },\n    {\n    \"nombre\": \"Carlos Vives\",\n    \"descripcion\": \"Buen cantante\",\n    \"imagen\":\"https://www.lecturas.com/medio/2022/06/16/shakira_0653595c_800x800.jpg\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Update invalid Performers of an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The performer with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers"
					]
				}
			},
			"response": [
				{
					"name": "Update invalid Performers of an Album",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Add a Performer to an Album",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"{{performer_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a Performer to an Album",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"{{performer_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a Performer from an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"{{performer_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a Performer from an Album",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"{{performer_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an invalid Performer from an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The performer with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid Performer from an Album",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a non-associated Performer of an Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The performer with the given id is not associated to the album\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id_2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"albums",
						"{{album_id}}",
						"performers",
						"{{performer_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a non-associated Performer of an Album",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/albums/{{album_id}}/performers/{{performer_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"albums",
								"{{album_id}}",
								"performers",
								"{{performer_id_2}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	]
}